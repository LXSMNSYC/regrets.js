var Regrets=function(t){"use strict";const e=Promise.resolve.bind(Promise),n=Promise.all.bind(Promise);class s{constructor(t){this.promise=e(t)}then(t){return"function"==typeof t?new s(this.promise.then(n=>n?e(t()).then(()=>n):this.promise)):this}else(t){return"function"==typeof t?new s(this.promise.then(n=>n?this.promise:e(t()).then(()=>n))):this}elseIf(t){return new s(this.promise.then(e=>!e&&t))}}const o=(t,n,s)=>e(s?t():t).then(r=>!!r&&e(n()).then(()=>o(t,n,s)));const r=(t,n,s)=>e(n()).then(()=>e(s?t():t).then(e=>!e&&r(t,n,s)));return t.If=s,t.Switch=class{},t.While=class{constructor(t){this.evaluator=t}do(t){return o(this.evaluator,t,"function"==typeof this.evaluator)}},t.Repeat=class{constructor(t){this.scope=t}until(t){return r(t,this.scope,"function"==typeof t)}},t.not=(t=>e(t).then(t=>!t)),t.and=((t,e)=>n([t,e]).then(t=>t[0]&&t[1])),t.or=((t,e)=>n([t,e]).then(t=>t[0]||t[1])),t.eq=((t,e)=>n([t,e]).then(t=>t[0]===t[1])),t.ne=((t,e)=>n([t,e]).then(t=>t[0]!==t[1])),t.gt=((t,e)=>n([t,e]).then(t=>t[0]>t[1])),t.ge=((t,e)=>n([t,e]).then(t=>t[0]>=t[1])),t.le=((t,e)=>n([t,e]).then(t=>t[0]<=t[1])),t.lt=((t,e)=>n([t,e]).then(t=>t[0]<t[1])),t}({});